// ch02 변수 연습문제. 코드 혹은 주석으로 풀이를 작성했습니다.
public class Exercise {
	public static void main(String[] args) {
		
// 1. 논리형 1byte = boolean, 문자형 2byte = char, 정수형은 순서대로 byte, short, int, long
//		     실수형은 4byte부터 float, double

// 2. 주민등록번호는 13자리의 정수이므로 long이 적합하다. 이하는 regNo라는 이름의 변수를 선언 및 초기화하는 코드다.
		long regNo = 1234567890123l;
		
// 3. 리터럴 : 100, 100l, 3.14f
//    변수: i, l
//    키워드: ??? 이건 뭐지 -> 키워드가 예약어를 말하는 것이었다. int, long, final, float
//    상수 : Pi
		
// 4. b - 대소문자를 구분하는데 Byte는 byte와 다르다.

// 5. 1) 12
//    2) true
//    3) AB X ->131
//	  4) 12 X-> 51
//	  5) 12 X-> 99
//	  6) Java
//	  7) true X-> 에러
		
// 5번 해설 : 문자열과 덧셈 연산을 하면 항상 문자열의 결과 출력, 하지만 문자와 문자의 덧셈연산의 결과는 int형 정수값
// int형보다 작은 타입들은 int형으로 변환된 후에 덧셈 연산이 진행되기 때문. A, B는 각각 65, 66이므로 131,
// '1'의 문자 코드는 49, '2'의 문자코드는 50이다.

// 6. b, c, d, e - 대소문자 구분 그리고 System은 맞지만 예약어가 아니다.
	
// 7. a, d, e, g -변수 이름의 규칙
	
// 8. a, d - 참조형 변수는 4byte
		
// 9. d, e - float의 범위가 long보다 byte는 작지만 범위가 커서 생략 가능, 마찬가지로 char도 int가 범위가 더 넓다.
//           다른 것이 되지 않는 이유는 범위가 달라서 그렇다.
	
// 10. char은 2byte니까 2의 16제곱만큼 표현할 수 있는 수의 개수가 있다. 즉, 0~2^16-1
	
// 11. a, b, c, d - a는 범위를 벗어났고, char은 공백과 문자열을 저장할 수 없다.
//	                   float의 경우 리터럴에 접미사f가 붙어야한다. e는 4byte를 8byte자료형에 할당했으니 가능

// 12. a, b, c, e - 이건 경험적으로 아는 것인데 책에서 예시는 다 a만 쓰다가 딱 한번 b도 나오길래 해봤는데 정상 작동한다.
//            나머지는 순서가 바뀌거나 왜곡되어 있다.
				
//	13. c, e, f - c와 e는 접미사가 생략됐다. String의 경우 참조형으로 그 기본값은 null이다.	
//		
//		
	}
}
